"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.applicationsState = exports.applicationsReducers = exports.applicationsActions = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _utils = require("../utils");
var _constants = require("../../constants");
const applicationsState = {
  loading: true,
  fetching: true,
  error: null,
  userApplications: [],
  accountApplications: []
};
exports.applicationsState = applicationsState;
const reducers = {
  setApplicationsState: (0, _utils.typeReducerForKey)('applicationsState')
};
exports.applicationsReducers = reducers;
const actions = {
  loadUserApplications: (0, _toolkit.createAction)(`${_constants.authStoreName}/loadUserApplications`),
  loadAccountApplications: (0, _toolkit.createAction)(`${_constants.authStoreName}/loadAccountApplications`),
  assignUserToApps: (0, _toolkit.createAction)(`${_constants.authStoreName}/assignUserToApps`, payload => ({
    payload
  })),
  unassignUserFromApps: (0, _toolkit.createAction)(`${_constants.authStoreName}/unassignUserFromApps`, payload => ({
    payload
  }))
};

/**
 *  To be used for actions types after dispatch, and should contains
 *  the reducers and actions as standalone function
 */
exports.applicationsActions = actions;
// noinspection JSUnusedLocalSymbols
/**
 *  if you see error in matcher that's mean the DispatchAction does not
 *  contains the same functions in reducers and actions
 */
const Matcher = {};