import { createAction } from '@reduxjs/toolkit';
import { typeReducerForKey } from '../utils';
import { authStoreName } from '../../constants';
const applicationsState = {
  loading: true,
  fetching: true,
  error: null,
  userApplications: [],
  accountApplications: []
};
const reducers = {
  setApplicationsState: typeReducerForKey('applicationsState')
};
const actions = {
  loadUserApplications: createAction(`${authStoreName}/loadUserApplications`),
  loadAccountApplications: createAction(`${authStoreName}/loadAccountApplications`),
  assignUserToApps: createAction(`${authStoreName}/assignUserToApps`, payload => ({
    payload
  })),
  unassignUserFromApps: createAction(`${authStoreName}/unassignUserFromApps`, payload => ({
    payload
  }))
};

/**
 *  To be used for actions types after dispatch, and should contains
 *  the reducers and actions as standalone function
 */

// noinspection JSUnusedLocalSymbols
/**
 *  if you see error in matcher that's mean the DispatchAction does not
 *  contains the same functions in reducers and actions
 */
const Matcher = {};
export { applicationsState, reducers as applicationsReducers, actions as applicationsActions };