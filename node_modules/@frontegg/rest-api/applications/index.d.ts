import { IUserApplicationsIdPayload, IUserApplicationsDataPayload, IApplicationsResponse, IAssignUserToApplicationsBody, IUsersApplicationsIdPayload, IUsersOfApplicationsResponse, ITenantApplicationsResponse, IGetUsersOfApplicationsQuery, IUsersApplicationsIdsResponse } from "./interfaces";
/**
 * Get applications id array for single user by user id
 * @param userId - user id to find his applications id array
 * @returns all app ids as string[]
 */
export declare function getUserApplicationsId({ userId }: IUserApplicationsIdPayload): Promise<string[]>;
/**
 * Get applications id array for multiple users by user id array
 * @param userIds - array of all user id's
 * @returns object that maps every user id to his applications id array
 */
export declare function getUsersApplicationsId({ userIds }: IUsersApplicationsIdPayload): Promise<IUsersApplicationsIdsResponse[]>;
/**
 * Get applications data array for specific tenant
 * @returns array of object with tenant id and his applications id array
 */
export declare function getTenantsApplications(): Promise<ITenantApplicationsResponse[]>;
/**
 * Get applications data by array of application ids
 * @param appIds - array of application ids
 * @returns array of application data
 */
export declare function getApplicationsData({ appIds, includeFreeAccess }: IUserApplicationsDataPayload): Promise<IApplicationsResponse[]>;
/**
 * Assign user to multiple applications
 * @param appIds - string[]
 * @param tenantId - string
 * @param userId - string
 * @returns void
 */
export declare function assignUserToApplications(body: IAssignUserToApplicationsBody): Promise<void>;
/**
 * Unassign user from multiple applications
 * @param appIds - string[]
 * @param tenantId - string
 * @param userId - string
 * @returns void
 */
export declare function unassignUserFromApplications(body: IAssignUserToApplicationsBody): Promise<void>;
/**
 * Get users array for each application for array of applications
 * @param appIds - array of applications
 * @returns array of objects with application id and his users array
 */
export declare function getUsersOfApplications({ appIds }: IGetUsersOfApplicationsQuery): Promise<IUsersOfApplicationsResponse[]>;
